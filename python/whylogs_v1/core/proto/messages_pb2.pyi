"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DataType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DataType._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: DataType._Type.ValueType  # 0
        NULL: DataType._Type.ValueType  # 1
        FRACTIONAL: DataType._Type.ValueType  # 2
        INTEGRAL: DataType._Type.ValueType  # 3
        BOOLEAN: DataType._Type.ValueType  # 4
        STRING: DataType._Type.ValueType  # 5
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: DataType.Type.ValueType  # 0
    NULL: DataType.Type.ValueType  # 1
    FRACTIONAL: DataType.Type.ValueType  # 2
    INTEGRAL: DataType.Type.ValueType  # 3
    BOOLEAN: DataType.Type.ValueType  # 4
    STRING: DataType.Type.ValueType  # 5

    TYPE_FIELD_NUMBER: builtins.int
    type: global___DataType.Type.ValueType
    def __init__(self,
        *,
        type: global___DataType.Type.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___DataType = DataType

class HllSketchMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKETCH_FIELD_NUMBER: builtins.int
    LG_K_FIELD_NUMBER: builtins.int
    sketch: builtins.bytes
    lg_k: builtins.int
    def __init__(self,
        *,
        sketch: builtins.bytes = ...,
        lg_k: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lg_k",b"lg_k","sketch",b"sketch"]) -> None: ...
global___HllSketchMessage = HllSketchMessage

class FrequentItemsSketchMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKETCH_FIELD_NUMBER: builtins.int
    LG_MAX_K_FIELD_NUMBER: builtins.int
    sketch: builtins.bytes
    lg_max_k: builtins.int
    def __init__(self,
        *,
        sketch: builtins.bytes = ...,
        lg_max_k: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lg_max_k",b"lg_max_k","sketch",b"sketch"]) -> None: ...
global___FrequentItemsSketchMessage = FrequentItemsSketchMessage

class KllSketchMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKETCH_FIELD_NUMBER: builtins.int
    K_FIELD_NUMBER: builtins.int
    MEAN_FIELD_NUMBER: builtins.int
    M2_FIELD_NUMBER: builtins.int
    sketch: builtins.bytes
    k: builtins.int
    mean: builtins.float
    m2: builtins.float
    def __init__(self,
        *,
        sketch: builtins.bytes = ...,
        k: builtins.int = ...,
        mean: builtins.float = ...,
        m2: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["k",b"k","m2",b"m2","mean",b"mean","sketch",b"sketch"]) -> None: ...
global___KllSketchMessage = KllSketchMessage

class TrackerMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    N_FIELD_NUMBER: builtins.int
    D_FIELD_NUMBER: builtins.int
    SERIALIZED_BYTES_FIELD_NUMBER: builtins.int
    FREQUENT_ITEMS_FIELD_NUMBER: builtins.int
    CARDINALITY_TRACKER_FIELD_NUMBER: builtins.int
    HISTOGRAM_FIELD_NUMBER: builtins.int
    CUSTOM_FIELD_NUMBER: builtins.int
    n: builtins.int
    d: builtins.float
    serialized_bytes: builtins.bytes
    @property
    def frequent_items(self) -> global___FrequentItemsSketchMessage: ...
    @property
    def cardinality_tracker(self) -> global___HllSketchMessage: ...
    @property
    def histogram(self) -> global___KllSketchMessage: ...
    @property
    def custom(self) -> global___PluginMessage: ...
    def __init__(self,
        *,
        n: builtins.int = ...,
        d: builtins.float = ...,
        serialized_bytes: builtins.bytes = ...,
        frequent_items: typing.Optional[global___FrequentItemsSketchMessage] = ...,
        cardinality_tracker: typing.Optional[global___HllSketchMessage] = ...,
        histogram: typing.Optional[global___KllSketchMessage] = ...,
        custom: typing.Optional[global___PluginMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cardinality_tracker",b"cardinality_tracker","custom",b"custom","d",b"d","frequent_items",b"frequent_items","histogram",b"histogram","n",b"n","serialized_bytes",b"serialized_bytes","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cardinality_tracker",b"cardinality_tracker","custom",b"custom","d",b"d","frequent_items",b"frequent_items","histogram",b"histogram","n",b"n","serialized_bytes",b"serialized_bytes","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["n","d","serialized_bytes","frequent_items","cardinality_tracker","histogram","custom"]]: ...
global___TrackerMessage = TrackerMessage

class PluginType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Language:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LanguageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PluginType._Language.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PYTHON: PluginType._Language.ValueType  # 0
        JAVA: PluginType._Language.ValueType  # 1
    class Language(_Language, metaclass=_LanguageEnumTypeWrapper):
        pass

    PYTHON: PluginType.Language.ValueType  # 0
    JAVA: PluginType.Language.ValueType  # 1

    PLUGIN_CLASS_NAME_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    plugin_class_name: typing.Text
    language: global___PluginType.Language.ValueType
    def __init__(self,
        *,
        plugin_class_name: typing.Text = ...,
        language: global___PluginType.Language.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language",b"language","plugin_class_name",b"plugin_class_name"]) -> None: ...
global___PluginType = PluginType

class PluginMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    PLUGIN_TYPES_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    SERIALIZED_BYTES_FIELD_NUMBER: builtins.int
    name: typing.Text
    @property
    def plugin_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PluginType]:
        """The language and corresponding classname that implements this plugin."""
        pass
    @property
    def params(self) -> google.protobuf.struct_pb2.Struct: ...
    serialized_bytes: builtins.bytes
    def __init__(self,
        *,
        name: typing.Text = ...,
        plugin_types: typing.Optional[typing.Iterable[global___PluginType]] = ...,
        params: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        serialized_bytes: builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["item",b"item","params",b"params","serialized_bytes",b"serialized_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item","name",b"name","params",b"params","plugin_types",b"plugin_types","serialized_bytes",b"serialized_bytes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["item",b"item"]) -> typing.Optional[typing_extensions.Literal["params","serialized_bytes"]]: ...
global___PluginMessage = PluginMessage

class ColumnMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TrackersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___TrackerMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___TrackerMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TRACKERS_FIELD_NUMBER: builtins.int
    @property
    def trackers(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TrackerMessage]: ...
    def __init__(self,
        *,
        trackers: typing.Optional[typing.Mapping[typing.Text, global___TrackerMessage]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["trackers",b"trackers"]) -> None: ...
global___ColumnMessage = ColumnMessage

class DatasetProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SCHEMA_MAJOR_VERSION_FIELD_NUMBER: builtins.int
    SCHEMA_MINOR_VERSION_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    SESSION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DATA_TIMESTAMP_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    schema_major_version: builtins.int
    schema_minor_version: builtins.int
    session_id: typing.Text
    session_timestamp: builtins.int
    data_timestamp: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        schema_major_version: builtins.int = ...,
        schema_minor_version: builtins.int = ...,
        session_id: typing.Text = ...,
        session_timestamp: builtins.int = ...,
        data_timestamp: builtins.int = ...,
        tags: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metadata: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_timestamp",b"data_timestamp","metadata",b"metadata","schema_major_version",b"schema_major_version","schema_minor_version",b"schema_minor_version","session_id",b"session_id","session_timestamp",b"session_timestamp","tags",b"tags"]) -> None: ...
global___DatasetProperties = DatasetProperties

class DatasetProfileMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class ColumnsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___ColumnMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___ColumnMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetricPluginsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___TrackerMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___TrackerMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROPERTIES_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    METRIC_PLUGINS_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> global___DatasetProperties: ...
    @property
    def columns(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ColumnMessage]: ...
    @property
    def metric_plugins(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TrackerMessage]: ...
    def __init__(self,
        *,
        properties: typing.Optional[global___DatasetProperties] = ...,
        columns: typing.Optional[typing.Mapping[typing.Text, global___ColumnMessage]] = ...,
        metric_plugins: typing.Optional[typing.Mapping[typing.Text, global___TrackerMessage]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["columns",b"columns","metric_plugins",b"metric_plugins","properties",b"properties"]) -> None: ...
global___DatasetProfileMessage = DatasetProfileMessage

class CountMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(self,
        *,
        value: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___CountMessage = CountMessage
