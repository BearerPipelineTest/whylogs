"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DataType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DataType._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: DataType._Type.ValueType  # 0
        NULL: DataType._Type.ValueType  # 1
        FRACTIONAL: DataType._Type.ValueType  # 2
        INTEGRAL: DataType._Type.ValueType  # 3
        BOOLEAN: DataType._Type.ValueType  # 4
        STRING: DataType._Type.ValueType  # 5
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: DataType.Type.ValueType  # 0
    NULL: DataType.Type.ValueType  # 1
    FRACTIONAL: DataType.Type.ValueType  # 2
    INTEGRAL: DataType.Type.ValueType  # 3
    BOOLEAN: DataType.Type.ValueType  # 4
    STRING: DataType.Type.ValueType  # 5

    TYPE_FIELD_NUMBER: builtins.int
    type: global___DataType.Type.ValueType
    def __init__(self,
        *,
        type: global___DataType.Type.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___DataType = DataType

class HllSketchMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKETCH_FIELD_NUMBER: builtins.int
    LG_K_FIELD_NUMBER: builtins.int
    sketch: builtins.bytes
    lg_k: builtins.int
    def __init__(self,
        *,
        sketch: builtins.bytes = ...,
        lg_k: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lg_k",b"lg_k","sketch",b"sketch"]) -> None: ...
global___HllSketchMessage = HllSketchMessage

class FrequentItemsSketchMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKETCH_FIELD_NUMBER: builtins.int
    LG_MAX_K_FIELD_NUMBER: builtins.int
    sketch: builtins.bytes
    lg_max_k: builtins.int
    def __init__(self,
        *,
        sketch: builtins.bytes = ...,
        lg_max_k: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lg_max_k",b"lg_max_k","sketch",b"sketch"]) -> None: ...
global___FrequentItemsSketchMessage = FrequentItemsSketchMessage

class KllSketchMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKETCH_FIELD_NUMBER: builtins.int
    K_FIELD_NUMBER: builtins.int
    sketch: builtins.bytes
    k: builtins.int
    def __init__(self,
        *,
        sketch: builtins.bytes = ...,
        k: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["k",b"k","sketch",b"sketch"]) -> None: ...
global___KllSketchMessage = KllSketchMessage

class MetricComponentMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INDEX_FIELD_NUMBER: builtins.int
    N_FIELD_NUMBER: builtins.int
    D_FIELD_NUMBER: builtins.int
    FREQUENT_ITEMS_FIELD_NUMBER: builtins.int
    HLL_FIELD_NUMBER: builtins.int
    KLL_FIELD_NUMBER: builtins.int
    SERIALIZED_BYTES_FIELD_NUMBER: builtins.int
    CUSTOM_FIELD_NUMBER: builtins.int
    index: builtins.int
    """type index. It might determine how a field gets serder and the aggregation logic"""

    n: builtins.int
    """first class citizens"""

    d: builtins.float
    @property
    def frequent_items(self) -> global___FrequentItemsSketchMessage: ...
    @property
    def hll(self) -> global___HllSketchMessage: ...
    @property
    def kll(self) -> global___KllSketchMessage: ...
    serialized_bytes: builtins.bytes
    """extension points"""

    @property
    def custom(self) -> global___CustomMetricComponent: ...
    def __init__(self,
        *,
        index: builtins.int = ...,
        n: builtins.int = ...,
        d: builtins.float = ...,
        frequent_items: typing.Optional[global___FrequentItemsSketchMessage] = ...,
        hll: typing.Optional[global___HllSketchMessage] = ...,
        kll: typing.Optional[global___KllSketchMessage] = ...,
        serialized_bytes: builtins.bytes = ...,
        custom: typing.Optional[global___CustomMetricComponent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["custom",b"custom","d",b"d","frequent_items",b"frequent_items","hll",b"hll","kll",b"kll","n",b"n","serialized_bytes",b"serialized_bytes","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["custom",b"custom","d",b"d","frequent_items",b"frequent_items","hll",b"hll","index",b"index","kll",b"kll","n",b"n","serialized_bytes",b"serialized_bytes","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["n","d","frequent_items","hll","kll","serialized_bytes","custom"]]: ...
global___MetricComponentMessage = MetricComponentMessage

class CustomMetricComponent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    SERIALIZED_BYTES_FIELD_NUMBER: builtins.int
    name: typing.Text
    @property
    def params(self) -> google.protobuf.struct_pb2.Struct: ...
    serialized_bytes: builtins.bytes
    def __init__(self,
        *,
        name: typing.Text = ...,
        params: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        serialized_bytes: builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["item",b"item","params",b"params","serialized_bytes",b"serialized_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item","name",b"name","params",b"params","serialized_bytes",b"serialized_bytes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["item",b"item"]) -> typing.Optional[typing_extensions.Literal["params","serialized_bytes"]]: ...
global___CustomMetricComponent = CustomMetricComponent

class MetricMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MetricComponentsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___MetricComponentMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___MetricComponentMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    METRIC_COMPONENTS_FIELD_NUMBER: builtins.int
    @property
    def metric_components(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MetricComponentMessage]: ...
    def __init__(self,
        *,
        metric_components: typing.Optional[typing.Mapping[typing.Text, global___MetricComponentMessage]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metric_components",b"metric_components"]) -> None: ...
global___MetricMessage = MetricMessage

class ColumnMessage(google.protobuf.message.Message):
    """key: dist, cnt, int(max, min), fi(fi), card(hll),
    cnt: n, null
    type_cnt: bool, int, float, str, unknown
    int: max, min
    dist: hist, mean, m2
    fi: fi
    card: hll
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MetricComponentsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___MetricComponentMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___MetricComponentMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    METRIC_COMPONENTS_FIELD_NUMBER: builtins.int
    @property
    def metric_components(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MetricComponentMessage]:
        """namespacing reserved for constraint checks
        chk/name1/n
        chk/name1/failed
        chk/name2/n
        chk/name2

        model perf
        confusion metrix: needs to a list of histograms, and indices if sparse matrix, labels that map

        custom extension metrics
        e.stfx_metric_1/my_bytes
        e.stfx_metric_1/my_counter

        """
        pass
    def __init__(self,
        *,
        metric_components: typing.Optional[typing.Mapping[typing.Text, global___MetricComponentMessage]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metric_components",b"metric_components"]) -> None: ...
global___ColumnMessage = ColumnMessage

class DatasetProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SCHEMA_MAJOR_VERSION_FIELD_NUMBER: builtins.int
    SCHEMA_MINOR_VERSION_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    SESSION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DATA_TIMESTAMP_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    schema_major_version: builtins.int
    schema_minor_version: builtins.int
    session_id: typing.Text
    session_timestamp: builtins.int
    data_timestamp: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        schema_major_version: builtins.int = ...,
        schema_minor_version: builtins.int = ...,
        session_id: typing.Text = ...,
        session_timestamp: builtins.int = ...,
        data_timestamp: builtins.int = ...,
        tags: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metadata: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_timestamp",b"data_timestamp","metadata",b"metadata","schema_major_version",b"schema_major_version","schema_minor_version",b"schema_minor_version","session_id",b"session_id","session_timestamp",b"session_timestamp","tags",b"tags"]) -> None: ...
global___DatasetProperties = DatasetProperties

class DatasetProfileMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class ColumnsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___ColumnMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___ColumnMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetricComponentsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___MetricComponentMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___MetricComponentMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROPERTIES_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    METRIC_COMPONENTS_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> global___DatasetProperties: ...
    @property
    def columns(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ColumnMessage]: ...
    @property
    def metric_components(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MetricComponentMessage]: ...
    def __init__(self,
        *,
        properties: typing.Optional[global___DatasetProperties] = ...,
        columns: typing.Optional[typing.Mapping[typing.Text, global___ColumnMessage]] = ...,
        metric_components: typing.Optional[typing.Mapping[typing.Text, global___MetricComponentMessage]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["columns",b"columns","metric_components",b"metric_components","properties",b"properties"]) -> None: ...
global___DatasetProfileMessage = DatasetProfileMessage

class MessageIndex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[MessageIndex._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DATASET: MessageIndex._Type.ValueType  # 0
        COLUMN: MessageIndex._Type.ValueType  # 1
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    DATASET: MessageIndex.Type.ValueType  # 0
    COLUMN: MessageIndex.Type.ValueType  # 1

    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    EXTENSION_LENGTH_FIELD_NUMBER: builtins.int
    type: global___MessageIndex.Type.ValueType
    name: typing.Text
    offset: typing.Text
    length: typing.Text
    extension_length: typing.Text
    """offset + length"""

    def __init__(self,
        *,
        type: global___MessageIndex.Type.ValueType = ...,
        name: typing.Text = ...,
        offset: typing.Text = ...,
        length: typing.Text = ...,
        extension_length: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extension_length",b"extension_length","length",b"length","name",b"name","offset",b"offset","type",b"type"]) -> None: ...
global___MessageIndex = MessageIndex

class DatasetProfileHeader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROPERTIES_FIELD_NUMBER: builtins.int
    INDICES_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> global___DatasetProperties: ...
    @property
    def indices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageIndex]: ...
    def __init__(self,
        *,
        properties: typing.Optional[global___DatasetProperties] = ...,
        indices: typing.Optional[typing.Iterable[global___MessageIndex]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["indices",b"indices","properties",b"properties"]) -> None: ...
global___DatasetProfileHeader = DatasetProfileHeader

class CountMessage(google.protobuf.message.Message):
    """[HEADER][len][DATASET MEASURES CHUNK 1][len][DATASET MEASURES CHUNK 2][COLUMN 1][COLUMN1 EXTENSION][COLUMN2]

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(self,
        *,
        value: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___CountMessage = CountMessage
